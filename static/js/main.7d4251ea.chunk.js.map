{"version":3,"sources":["components/NavBar/NavBar.js","components/Footer/Footer.js","components/InputMonto/InputMonto.js","views/conversorSimple/Simple.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Footer","InputMonto","props","list","quotes","listMoney","push","type","name","id","placeholder","value","valueMoney","onChange","valueChange","symbolMoney","symbolChange","map","element","key","Simple","fetchMoney","a","cacheList","window","localStorage","getItem","data","fetch","response","json","setItem","JSON","stringify","parse","setState","money","results","fetchCurrency","state","length","cacheExist","fetchQuotes","valueExist","validation","fromPais","fromValue","currencyName","toPais","toValue","handleUpdate","from","to","valorN","band","n","index","hasOwnProperty","toNumber","Math","round","fromNumber","handleChangeSymbolFrom","e","target","handleChangeSymbolTo","handleChangeValueFrom","handleChangeValueTo","width","innerHeight","this","prevProps","prevState","style","height","action","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d4251ea.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./navbar.css\";\n\nfunction NavBar() {\n  return (\n    <div className=\"wrapper__nav\">\n      <h1 className=\"wrapper__nav--title\">Currency Converter</h1>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./footer.css\";\n\nexport default function Footer() {\n  return <div className=\"wrapper__footer\">Jesus Chacon Â©2019</div>;\n}\n","import React from \"react\";\n\nimport \"./inputmonto.css\";\n\nfunction InputMonto(props) {\n  const list = [];\n  for (const quotes in props.listMoney) {\n    list.push(quotes);\n  }\n\n  return (\n    <div className=\"form__money\">\n      <input\n        type=\"number\"\n        className=\"monto\"\n        name=\"from\"\n        id=\"\"\n        placeholder=\"Monto\"\n        value={props.valueMoney}\n        onChange={props.valueChange}\n      />\n      <select\n        value={props.symbolMoney}\n        onChange={props.symbolChange}\n        name=\"\"\n        id=\"\"\n        className=\"money\"\n      >\n        {list.map(element => {\n          return (\n            <option value={element} key={element}>\n              {element}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport default InputMonto;\n","import React, { Component } from \"react\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport InputMonto from \"../../components/InputMonto/InputMonto\";\n\nimport \"./simple.css\";\n\nclass Simple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerHeight + \"px\",\n      fromValue: \"USD\",\n      toValue: \"EUR\",\n      fromPais: \"\",\n      toPais: \"\",\n      fromNumber: 1,\n      toNumber: 0,\n      money: {},\n      quotes: [],\n      valueChange: true,\n      valorN: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMoney();\n    this.fetchCurrency();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.fromNumber !== this.state.fromNumber &&\n        this.state.valueChange) ||\n      prevState.fromValue !== this.state.fromValue\n    ) {\n      this.handleUpdate();\n    } else if (\n      (prevState.toNumber !== this.state.toNumber && !this.state.valueChange) ||\n      prevState.toValue !== this.state.toValue\n    ) {\n      this.handleUpdate();\n    }\n  }\n\n  fetchMoney = async () => {\n    const cacheList = window.localStorage.getItem(\"currencies\");\n    let data = {};\n\n    if (!cacheList) {\n      const response = await fetch(\n        \"http://free.currconv.com/api/v7/currencies?apiKey=a1e899d15f766cc09eea\"\n      );\n\n      data = await response.json();\n\n      window.localStorage.setItem(\"currencies\", JSON.stringify(data));\n    } else data = await JSON.parse(cacheList);\n\n    this.setState({\n      money: data.results\n    });\n  };\n\n  fetchCurrency = async () => {\n    if (this.state.quotes.length === 0) {\n      const band = await this.cacheExist();\n      if (band && this.state.quotes.length === 0) {\n        await this.fetchQuotes();\n      }\n    }\n    const value = this.valueExist();\n    this.validation(value);\n\n    this.setState({\n      fromPais: this.state.money[this.state.fromValue].currencyName,\n      toPais: this.state.money[this.state.toValue].currencyName\n    });\n  };\n\n  handleUpdate = async () => {\n    let value = this.valueExist();\n    if (value === -1) {\n      await this.fetchQuotes();\n      value = this.valueExist();\n    }\n    this.validation(value);\n\n    this.setState({\n      fromPais: this.state.money[this.state.fromValue].currencyName,\n      toPais: this.state.money[this.state.toValue].currencyName\n    });\n  };\n\n  fetchQuotes = async () => {\n    const from = this.state.fromValue;\n    const to = this.state.toValue;\n\n    const response = await fetch(\n      `http://free.currconv.com/api/v7/convert?q=${from}_${to},${to}_${from}&compact=ultra&apiKey=a1e899d15f766cc09eea`\n    );\n\n    const data = await response.json();\n\n    window.localStorage.setItem(this.state.valorN, JSON.stringify(data));\n\n    this.setState({\n      quotes: [...this.state.quotes, data]\n    });\n  };\n\n  cacheExist = async () => {\n    let band = true;\n    let n = 0;\n    do {\n      const cacheList = window.localStorage.getItem(`quotes${n}`);\n      if (cacheList) {\n        const data = await JSON.parse(cacheList);\n        this.setState({\n          quotes: [...this.state.quotes, data]\n        });\n      } else {\n        this.setState({\n          valorN: `quotes${n}`\n        });\n        return true;\n      }\n      n++;\n    } while (band);\n  };\n\n  valueExist = () => {\n    const data = this.state.quotes;\n    const id = this.state.valueChange\n      ? `${this.state.fromValue}_${this.state.toValue}`\n      : `${this.state.toValue}_${this.state.fromValue}`;\n\n    for (let index = 0; index < data.length; index++) {\n      const element = data[index];\n      if (element.hasOwnProperty(id)) {\n        return element[id];\n      }\n    }\n    return -1;\n  };\n\n  validation = value => {\n    if (this.state.valueChange) {\n      this.setState({\n        toNumber: Math.round(this.state.fromNumber * value * 100) / 100\n      });\n    } else {\n      this.setState({\n        fromNumber: Math.round(this.state.toNumber * value * 100) / 100\n      });\n    }\n  };\n\n  handleChangeSymbolFrom = e => {\n    const value = e.target.value;\n    if (value === this.state.toValue) {\n      this.setState({\n        toValue: this.state.fromValue,\n        fromValue: value,\n        valueChange: `${this.state.fromValue}`\n      });\n    } else {\n      this.setState({\n        fromValue: value\n      });\n    }\n  };\n\n  handleChangeSymbolTo = e => {\n    const value = e.target.value;\n    if (value === this.state.fromValue) {\n      this.setState({\n        fromValue: this.state.toValue,\n        toValue: value\n      });\n    } else {\n      this.setState({\n        toValue: value\n      });\n    }\n  };\n\n  handleChangeValueFrom = e => {\n    const value = e.target.value;\n    this.setState({\n      fromNumber: value,\n      valueChange: true\n    });\n  };\n\n  handleChangeValueTo = e => {\n    const value = e.target.value;\n    this.setState({\n      toNumber: value,\n      valueChange: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\" style={{ height: this.state.width }}>\n        <NavBar />\n        <div className=\"container__conversor\">\n          <form action=\"\" className=\"container__conversor--form\">\n            <InputMonto\n              listMoney={this.state.money}\n              symbolMoney={this.state.fromValue}\n              valueMoney={this.state.fromNumber}\n              symbolChange={this.handleChangeSymbolFrom}\n              valueChange={this.handleChangeValueFrom}\n            />\n            <InputMonto\n              listMoney={this.state.money}\n              symbolMoney={this.state.toValue}\n              valueMoney={this.state.toNumber}\n              symbolChange={this.handleChangeSymbolTo}\n              valueChange={this.handleChangeValueTo}\n            />\n            <div className=\"container__name\">\n              <span>{this.state.fromPais}</span>\n              <span>></span>\n              <span>{this.state.toPais}</span>\n            </div>\n          </form>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Simple;\n","import React from \"react\";\nimport \"./App.css\";\nimport Simple from \"./views/conversorSimple/Simple\";\n\nfunction App() {\n  return <Simple />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}